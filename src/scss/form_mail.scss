// Миксины
@mixin fontz($fz) {
    font-size: $fz * 1px;
}
// краткий вызов: lh
@mixin lineheight($lh,$fz) {
    line-height: ($lh/$fz)*100%;
}
// ==================================================================
.form_mail {
    width: 720px;
    margin: 0 auto;
    padding: 30px 0;   
    background-color: #000000;
}
// ==================================================================
.form {
    max-width: 550px;
    margin: 0 auto;
    color: #ffffff;
    padding: 50px 0;
    // Отключение линий табуляции в форме
    & * {
        outline: none;
    }
}
.form__body {
    // Для "загрузки" отправки формы
    position: relative;
    &::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.795) url('../img/loading.gif') center / 50px no-repeat;
        opacity: 0;
        visibility: hidden;
        transition: var(--default__transition);
    }
    &._sending {
        &::after {
            opacity: 1;
            visibility: visible;
        }
    }
}

// _sending
.form__title {
    @include fontz(40);
    font-weight: 700;
    margin-bottom: 30px;
}
.form__item {
    margin-bottom: 20px;
    textarea.form__input {
        min-height: 120px;
        // Увеличивать только по вертикали
        resize: vertical;
        padding: 20px;
    }
}
.form__label {
    @include fontz(18);
    display: block;
    margin-bottom: 10px;
}
.form__input {
    height: 50px;
    padding: 0 20px;
    border-radius: 5px;
    width: 100%;
    @include fontz(18);
    transition: var(--default__transition);
    &::placeholder {
        @include fontz(16);
        color: rgba(0, 0, 0, 0.795);
    }
    // Кастомный outline
    &:focus {
        box-shadow: 0 0 15px #42f568;
    }
    // Стилизация класса с ошибкой
    &._error {
        box-shadow: 0 0 30px red;
    }
}
.options {
    padding-top: 10px;
}
.options__item {
    margin-bottom: 10px;
}
// ! Стилизация radio кнопок ---------------------------
.options__input {
    display: none;
    // Нужно обратиться к следующему объекту в коде (Поэтому сперва должен быть input, потом label)
    &:checked + .options__label::after {
        transform: scale(1);
    }
}
.options__label {
    // Inline чтобы ширина объекта была по контенту, если просто flex, то ширина будет распространена на 100%
    display: inline-flex;
    @include fontz(16);
    line-height: 140%;
    align-items: center;
    position: relative;
    cursor: pointer;
    // Рисуем радио кнопки
    // #1 Оболочка для кнопки
    &::before {
        content: "";
        align-self: flex-start; // Чтобы кружок был сверху, если больше одной строки, например
        flex: 0 0 24px; // Если делать через width, то кружок может при определенных условиях сплющиться
        height: 24px;
        background-color: #fff;
        border-radius: 50%;
        margin-right: 10px;
    }
    // #2 Заполнение кнопки
    &::after {
        transition: transform 0.5s ease 0s;
        content: "";
        position: absolute;
        top: 4px;
        left: 4px;
        width: 16px;
        height: 16px;
        background-color: green;
        border-radius: 50%;
        // Изначальное скрытие кружка
        transform: scale(0);
    }
}
// ! Есть отдельная стилизация (завтра сделать: отдельный scss, html и JS файл) -----------------------------------------------------
.select {
    height: 50px;
    width: 100%;
    border-radius: 5px;
    @include fontz(18);
    padding: 0 20px;
}
// ! Стилизация выбора файла -----------------------------------------------------

.file {
}
.file__item {
    position: relative;
    &:not(:last-child) {
        margin-bottom: 20px;
    }
}
.file__input {
    // Скрываем дефолтную кнопку
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    @include fontz(0); // если не ставить, то где-то курсор пропадает
    background-color: red;
    cursor: pointer;
}
.file__button {
    // На место дефолтной будет бутафорная
    display: inline-flex;
    min-height: 40px;
    border-radius: 20px;
    justify-content: center;
    align-items: center;
    background-color: rgb(54, 54, 134);
    padding: 0 15px;
}

.file__preview {     
    display: inline-block;
    max-width: 100px;
    padding: 10px 0 0 0;
    overflow: hidden;
    img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
}
// ! Стилизация выбора файла -----------------------------------------------------

.checkbox {
    // Класс проверки на ошибки
    &._error .checkbox__label::before {
        box-shadow: 0 0 30px red;
    }
}
.checkbox__input {
    display: none;
    // Функционал кастомного checkbox
    &:checked + .checkbox__label::after {
        transform: scale(1);
    }

//         &:focus + .custom-checkbox {
//             background-color: #005DFF;
//             img {
//                 display: inherit;
//             }
//         }
//         &:not(:checked) + .custom-checkbox {
//             background-color: #FFFFFF;
//             img {
//                 display: none;
//             }
//         }
}
.checkbox__label {
    @include fontz(16);
    line-height: 140%;
    display: inline-flex;
    position: relative;
    align-items: center;
    cursor: pointer;

    // Рисуем кастомный checkbox
    &::before {
        content: "";
        align-self: flex-start;
        margin-right: 10px;
        flex: 0 0 24px;
        height: 24px;
        background-color: #ffffff;
        border-radius: 4px;
    }
    &::after {
        content: "";
        width: 16px;
        height: 16px;
        position: absolute;
        top: 4px;
        left: 4px;
        background-color: #7a956b;
        border-radius: 4px;
        transform: scale(0);
        transition: transform 0.5s ease 0s;
    }
    a {
        color: green;
    }
}

.form__button {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 60px;
    background-color: blue;
    color: #ffffff;
    @include fontz(18);
    text-transform: uppercase;
    letter-spacing: 2px;
    font-weight: 700;
    cursor: pointer;
    border-radius: 20px;
    box-shadow: 0 5px 0 #c2c1c1;
    transition: var(--default__transition);
    // Эффект нажатия прикольный
    position: relative;
    top: 0;
    &:hover {
        background-color: rgb(5, 5, 190);
    }
    &:active {
        top: 3px;
        box-shadow: 0 2px 0 #c2c1c1; 
    }
}